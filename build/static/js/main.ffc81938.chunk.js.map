{"version":3,"sources":["logo.svg","App.js","Navigator.js","Content.js","Createform.js","Header.js","Question.js","serviceWorker.js","index.js"],"names":["module","exports","App","categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","key","childId","button","Divider","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","typography","block","display","addUser","contentWrapper","Paper","AppBar","position","elevation","Toolbar","Grid","container","alignItems","Button","Tooltip","title","IconButton","Typography","align","createformWrapper","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","root","borderColor","flexGrow","onDrawerToggle","React","useState","value","setValue","a11yProps","index","TabPanel","component","role","hidden","aria-labelledby","Box","p","Hidden","smUp","aria-label","onClick","xs","Avatar","src","alt","Tabs","textColor","onChange","event","newValue","Tab","label","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","style","open","onClose","xsDown","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffc81938.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Dashboard from '@material-ui/icons/Dashboard';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\n\r\nconst categories = [\r\n    {\r\n        id: '',\r\n        children: [\r\n            { id: 'Dashboard', icon: <Dashboard />, active: true },\r\n            { id: 'Profile', icon: <PeopleIcon /> },\r\n            // { id: 'Database', icon: <DnsRoundedIcon /> },\r\n            // { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\r\n            // { id: 'Hosting', icon: <PublicIcon /> },\r\n            // { id: 'Functions', icon: <SettingsEthernetIcon /> },\r\n            // { id: 'ML Kit', icon: <SettingsInputComponentIcon /> },\r\n            { id: 'Setting', icon: <SettingsIcon /> },\r\n        ],\r\n    },\r\n    // {\r\n    //     id: 'Quality',\r\n    //     children: [\r\n    //         { id: 'Analytics', icon: <SettingsIcon /> },\r\n    //         { id: 'Performance', icon: <TimerIcon /> },\r\n    //         { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\r\n    //     ],\r\n    // },\r\n];\r\n\r\nconst styles = theme => ({\r\n    categoryHeader: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    categoryHeaderPrimary: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    item: {\r\n        paddingTop: 1,\r\n        paddingBottom: 1,\r\n        color: 'rgba(255, 255, 255, 0.7)',\r\n        '&:hover,&:focus': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n        },\r\n    },\r\n    itemCategory: {\r\n        backgroundColor: '#232f3e',\r\n        boxShadow: '0 -1px 0 #404854 inset',\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    firebase: {\r\n        fontSize: 24,\r\n        color: theme.palette.common.white,\r\n    },\r\n    itemActiveItem: {\r\n        color: '#4fc3f7',\r\n    },\r\n    itemPrimary: {\r\n        fontSize: 'inherit',\r\n    },\r\n    itemIcon: {\r\n        minWidth: 'auto',\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n});\r\n\r\nfunction Navigator(props) {\r\n    const { classes, ...other } = props;\r\n\r\n    return (\r\n        <Drawer variant=\"permanent\" {...other}>\r\n            <List disablePadding>\r\n                <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n                    {/* Paperbase */}\r\n                    Survey Form\r\n                </ListItem>\r\n                <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n                    <ListItemIcon className={classes.itemIcon}>\r\n                        <HomeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        classes={{\r\n                            primary: classes.itemPrimary,\r\n                        }}\r\n                    >\r\n                        Home\r\n          </ListItemText>\r\n                </ListItem>\r\n                {categories.map(({ id, children }) => (\r\n                    <React.Fragment key={id}>\r\n                        <ListItem className={classes.categoryHeader}>\r\n                            <ListItemText\r\n                                classes={{\r\n                                    primary: classes.categoryHeaderPrimary,\r\n                                }}\r\n                            >\r\n                                {id}\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        {children.map(({ id: childId, icon, active }) => (\r\n                            <ListItem\r\n                                key={childId}\r\n                                button\r\n                                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n                            >\r\n                                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                                <ListItemText\r\n                                    classes={{\r\n                                        primary: classes.itemPrimary,\r\n                                    }}\r\n                                >\r\n                                    {childId}\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                        <Divider className={classes.divider} />\r\n                    </React.Fragment>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nNavigator.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: 'block',\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    contentWrapper: {\r\n        margin: '40px 16px',\r\n    },\r\n    // list: {\r\n    //     width: 260,\r\n    //     color: theme.palette.common.white,\r\n    // },\r\n    // fullList: {\r\n    //     width: 'auto',\r\n    // },\r\n});\r\n\r\n\r\nfunction Content(props) {\r\n    const { classes } = props;\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        {/* <Grid item>\r\n                            <SearchIcon className={classes.block} color=\"inherit\" />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs>\r\n                            <TextField\r\n                                fullWidth\r\n                                placeholder=\"Search by email address, phone number, or user UID\"\r\n                                InputProps={{\r\n                                    disableUnderline: true,\r\n                                    className: classes.searchInput,\r\n                                }}\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            {/* <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                                Add Question\r\n                        </Button> */}\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>Add Qestion</Button>\r\n                            <Tooltip title=\"Reload\">\r\n                                <IconButton>\r\n                                    <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.contentWrapper}>\r\n                <Typography color=\"textSecondary\" align=\"center\">\r\n                    No Questions added yet!\r\n        </Typography>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: 'block',\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    createformWrapper: {\r\n        margin: '40px 16px',\r\n    },\r\n    // list: {\r\n    //     width: 260,\r\n    //     color: theme.palette.common.white,\r\n    // },\r\n    // fullList: {\r\n    //     width: 'auto',\r\n    // },\r\n});\r\n\r\n\r\nfunction Createform(props) {\r\n    const { classes } = props;\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        {/* <Grid item>\r\n                            <SearchIcon className={classes.block} color=\"inherit\" />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs>\r\n                            <TextField\r\n                                fullWidth\r\n                                placeholder=\"Search by email address, phone number, or user UID\"\r\n                                InputProps={{\r\n                                    disableUnderline: true,\r\n                                    className: classes.searchInput,\r\n                                }}\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            {/* <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                                Add Question\r\n                        </Button> */}\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>Add Form</Button>\r\n                            <Tooltip title=\"Reload\">\r\n                                <IconButton>\r\n                                    <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.createformWrapper}>\r\n                <Typography color=\"textSecondary\" align=\"center\">\r\n                    No Forms added yet!\r\n        </Typography>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nCreateform.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Createform);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Content from './Content';\r\nimport Createform from './Createform';\r\n\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n    secondaryBar: {\r\n        zIndex: 0,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -theme.spacing(1),\r\n    },\r\n    iconButtonAvatar: {\r\n        padding: 4,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: lightColor,\r\n        '&:hover': {\r\n            color: theme.palette.common.white,\r\n        },\r\n    },\r\n    button: {\r\n        // borderColor: lightColor,\r\n    },\r\n    root: {\r\n        borderColor: lightColor,\r\n        flexGrow: 1,\r\n        // backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nfunction Header(props) {\r\n    const { classes, onDrawerToggle } = props;\r\n    const [value, setValue] = React.useState(0);\r\n    function a11yProps(index) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    function TabPanel(props) {\r\n        const { children, value, index, ...other } = props;\r\n\r\n        return (\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && <Box p={3}>{children}</Box>}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.any.isRequired,\r\n        value: PropTypes.any.isRequired,\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                        <Hidden smUp>\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={onDrawerToggle}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xs />\r\n                        <Grid item>\r\n                            {/* <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                                Go to docs\r\n              </Link> */}\r\n                        </Grid>\r\n                        {/* <Grid item>\r\n                            <Tooltip title=\"Alerts • No alerts\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <NotificationsIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"Name Avatar\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                {/* <Toolbar>\r\n                    <Grid container alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs>\r\n                            <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                                Authentication\r\n              </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button className={classes.button} variant=\"outlined\" color=\"inherit\" size=\"small\">\r\n                                Web setup\r\n              </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Help\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <HelpIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar> */}\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                <Tabs value={value} textColor=\"inherit\" className={classes.root} onChange={handleChange}>\r\n                    <Tab textColor=\"inherit\" label=\"Question bank\" {...a11yProps(0)} />\r\n                    <Tab textColor=\"inherit\" label=\"Forms\" {...a11yProps(1)} />\r\n                    <Tab textColor=\"inherit\" label=\"Create forms\" {...a11yProps(2)} />\r\n                    {/* <Tab textColor=\"inherit\" label=\"Usage\" /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <Content />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                No Forms\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Createform />\r\n            </TabPanel>\r\n            {/* <AppBar>\r\n                <div className={classes.root}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Item One\" {...a11yProps(0)} />\r\n                        <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                        <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n\r\n                </div>\r\n            </AppBar> */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator';\r\nimport Content from './Content';\r\nimport Header from './Header';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#63ccff',\r\n            main: '#009be5',\r\n            dark: '#006db3',\r\n        },\r\n    },\r\n    typography: {\r\n        h5: {\r\n            fontWeight: 500,\r\n            fontSize: 26,\r\n            letterSpacing: 0.5,\r\n        },\r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    props: {\r\n        MuiTab: {\r\n            disableRipple: true,\r\n        },\r\n    },\r\n    mixins: {\r\n        toolbar: {\r\n            minHeight: 48,\r\n        },\r\n    },\r\n});\r\n\r\ntheme = {\r\n    ...theme,\r\n    overrides: {\r\n        MuiDrawer: {\r\n            paper: {\r\n                backgroundColor: '#18202c',\r\n            },\r\n        },\r\n        MuiButton: {\r\n            label: {\r\n                textTransform: 'none',\r\n            },\r\n            contained: {\r\n                boxShadow: 'none',\r\n                '&:active': {\r\n                    boxShadow: 'none',\r\n                },\r\n            },\r\n        },\r\n        MuiTabs: {\r\n            root: {\r\n                marginLeft: theme.spacing(1),\r\n            },\r\n            indicator: {\r\n                height: 3,\r\n                borderTopLeftRadius: 3,\r\n                borderTopRightRadius: 3,\r\n                backgroundColor: theme.palette.common.white,\r\n            },\r\n        },\r\n        MuiTab: {\r\n            root: {\r\n                textTransform: 'none',\r\n                margin: '0 16px',\r\n                minWidth: 0,\r\n                padding: 0,\r\n                [theme.breakpoints.up('md')]: {\r\n                    padding: 0,\r\n                    minWidth: 0,\r\n                },\r\n            },\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                padding: theme.spacing(1),\r\n            },\r\n        },\r\n        MuiTooltip: {\r\n            tooltip: {\r\n                borderRadius: 4,\r\n            },\r\n        },\r\n        MuiDivider: {\r\n            root: {\r\n                backgroundColor: '#404854',\r\n            },\r\n        },\r\n        MuiListItemText: {\r\n            primary: {\r\n                fontWeight: theme.typography.fontWeightMedium,\r\n            },\r\n        },\r\n        MuiListItemIcon: {\r\n            root: {\r\n                color: 'inherit',\r\n                marginRight: 0,\r\n                '& svg': {\r\n                    fontSize: 20,\r\n                },\r\n            },\r\n        },\r\n        MuiAvatar: {\r\n            root: {\r\n                width: 32,\r\n                height: 32,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    app: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(6, 4),\r\n        background: '#eaeff1',\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n        background: '#eaeff1',\r\n    },\r\n};\r\n\r\nfunction Question(props) {\r\n    const { classes } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden smUp implementation=\"js\">\r\n                        <Navigator\r\n                            PaperProps={{ style: { width: drawerWidth } }}\r\n                            variant=\"temporary\"\r\n                            open={mobileOpen}\r\n                            onClose={handleDrawerToggle}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden xsDown implementation=\"css\">\r\n                        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n                    </Hidden>\r\n                </nav>\r\n                <div className={classes.app}>\r\n                    <Header onDrawerToggle={handleDrawerToggle} />\r\n                    <main className={classes.main}>\r\n                        {/* <Content /> */}\r\n                    </main>\r\n                    <footer className={classes.footer}>\r\n                        {/* <Copyright /> */}\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nQuestion.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Question);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Question from './Question';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Question />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}