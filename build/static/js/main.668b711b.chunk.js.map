{"version":3,"sources":["App.js","Navigator.js","form.js","requests/GetData.js","loadQuestion.js","Content.js","Createform.js","Header.js","Question.js","serviceWorker.js","index.js","logo.svg"],"names":["App","categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","key","childId","button","Divider","Form","state","Questions","singleQuestion","question","type","options","userId","this","setState","e","index","target","value","questionType","console","log","splice","i","length","axios","post","then","res","catch","error","remove","style","padding","marging","Question","onChange","handleChange","IconButton","onClick","handleRemove","Button","addQueston","handleSubmit","React","Component","GetData","datas","get","response","data","reverse","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","typography","block","display","addUser","contentWrapper","root","width","borderRadius","height","backgroundImage","outline","outlineOffset","background","checkedIcon","content","questList","JSON","parse","localStorage","getItem","useState","anchorEl","setAnchorEl","open","Boolean","undefined","Paper","AppBar","position","elevation","Toolbar","Grid","container","alignItems","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Tooltip","title","Typography","align","createformWrapper","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","link","textDecoration","borderColor","flexGrow","onDrawerToggle","setValue","a11yProps","TabPanel","component","role","hidden","aria-labelledby","Box","p","Hidden","smUp","aria-label","xs","Avatar","src","alt","Tabs","textColor","newValue","Tab","label","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","styles","drawer","flexShrink","app","flex","flexDirection","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","xsDown","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.668b711b.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Dashboard from '@material-ui/icons/Dashboard';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\n\r\nconst categories = [\r\n    {\r\n        id: '',\r\n        children: [\r\n            { id: 'Dashboard', icon: <Dashboard />, active: true },\r\n            { id: 'Profile', icon: <PeopleIcon /> },\r\n            // { id: 'Database', icon: <DnsRoundedIcon /> },\r\n            // { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\r\n            // { id: 'Hosting', icon: <PublicIcon /> },\r\n            // { id: 'Functions', icon: <SettingsEthernetIcon /> },\r\n            // { id: 'ML Kit', icon: <SettingsInputComponentIcon /> },\r\n            { id: 'Setting', icon: <SettingsIcon /> },\r\n        ],\r\n    },\r\n    // {\r\n    //     id: 'Quality',\r\n    //     children: [\r\n    //         { id: 'Analytics', icon: <SettingsIcon /> },\r\n    //         { id: 'Performance', icon: <TimerIcon /> },\r\n    //         { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\r\n    //     ],\r\n    // },\r\n];\r\n\r\nconst styles = theme => ({\r\n    categoryHeader: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    categoryHeaderPrimary: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    item: {\r\n        paddingTop: 1,\r\n        paddingBottom: 1,\r\n        color: 'rgba(255, 255, 255, 0.7)',\r\n        '&:hover,&:focus': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n        },\r\n    },\r\n    itemCategory: {\r\n        backgroundColor: '#232f3e',\r\n        boxShadow: '0 -1px 0 #404854 inset',\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    firebase: {\r\n        fontSize: 24,\r\n        color: theme.palette.common.white,\r\n    },\r\n    itemActiveItem: {\r\n        color: '#4fc3f7',\r\n    },\r\n    itemPrimary: {\r\n        fontSize: 'inherit',\r\n    },\r\n    itemIcon: {\r\n        minWidth: 'auto',\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n});\r\n\r\nfunction Navigator(props) {\r\n    const { classes, ...other } = props;\r\n\r\n    return (\r\n        <Drawer variant=\"permanent\" {...other}>\r\n            <List disablePadding>\r\n                <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n                    {/* Paperbase */}\r\n                    Survey Form\r\n                </ListItem>\r\n                <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n                    <ListItemIcon className={classes.itemIcon}>\r\n                        <HomeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        classes={{\r\n                            primary: classes.itemPrimary,\r\n                        }}\r\n                    >\r\n                        Home\r\n          </ListItemText>\r\n                </ListItem>\r\n                {categories.map(({ id, children }) => (\r\n                    <React.Fragment key={id}>\r\n                        <ListItem className={classes.categoryHeader}>\r\n                            <ListItemText\r\n                                classes={{\r\n                                    primary: classes.categoryHeaderPrimary,\r\n                                }}\r\n                            >\r\n                                {id}\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        {children.map(({ id: childId, icon, active }) => (\r\n                            <ListItem\r\n                                key={childId}\r\n                                button\r\n                                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n                            >\r\n                                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                                <ListItemText\r\n                                    classes={{\r\n                                        primary: classes.itemPrimary,\r\n                                    }}\r\n                                >\r\n                                    {childId}\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                        <Divider className={classes.divider} />\r\n                    </React.Fragment>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nNavigator.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Form extends React.Component {\r\n    state = {\r\n        Questions: [],\r\n        // questionType: []\r\n    }\r\n\r\n    singleQuestion = {\r\n        question: \"\",\r\n        type: \"\",\r\n        options: [],\r\n        userId: \"\"\r\n    }\r\n\r\n    options = [\"Option 1\", \"Option 2\"];\r\n\r\n    \r\n\r\n    addQueston() {\r\n        this.setState({\r\n            Questions: [...this.state.Questions, \"  \"]\r\n        })\r\n    }\r\n\r\n    handleChange(e, index) {\r\n        this.state.Questions[index] = e.target.value\r\n\r\n        this.setState({ Questions: this.state.Questions })\r\n    }\r\n\r\n    handleSelectChange(e, index) {\r\n        this.state.questionType[index] = e.target.value\r\n        this.setState({ questionType: this.state.questionType })\r\n        console.log(this.questionType);\r\n    }\r\n\r\n    handleRemove(e, index) {\r\n        this.state.Questions.splice(index, 1);\r\n        this.setState({ Questions: this.state.Questions })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        // if (localStorage == null) {\r\n        //     alert(\"NO\")\r\n        // }\r\n        // localStorage.setItem(\"questionList\", JSON.stringify(this.state))\r\n          for(var i=0; i< this.state.Questions.length; i++) {\r\n            axios.post(`http://eletionapp.3m3pfprvaw.ap-south-1.elasticbeanstalk.com/api/questions`, \r\n            {\r\n                \"question\": this.state.Questions[i],\r\n                \"type\": \"text\",\r\n                \"options\": [],\r\n                \"userId\": \"\"\r\n              })\r\n            .then(res => {\r\n              console.log(res);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n            // console.log(this.state, \"All Questions\");\r\n            this.setState({ Questions: this.state.Questions })\r\n          }\r\n\r\n    }\r\n\r\n    handleClear(e) {\r\n        this.state.Questions.splice(0);\r\n    }\r\n    componentDidMount() {\r\n        // fetch(\"http://eletionapp.3m3pfprvaw.ap-south-1.elasticbeanstalk.com/api/forms\")\r\n        //     .then(res => res.json(console.log(res)))\r\n        //     .then(\r\n        //         (result) => {\r\n        //             this.setState({\r\n        //                 isLoaded: true,\r\n        //                 items: result.items\r\n        //             });\r\n        //             console.log(this.items)\r\n        //         },\r\n        //         // Note: it's important to handle errors here\r\n        //         // instead of a catch() block so that we don't swallow\r\n        //         // exceptions from actual bugs in components.\r\n        //         (error) => {\r\n        //             this.setState({\r\n        //                 isLoaded: true,\r\n        //                 error\r\n        //             });\r\n        //         }\r\n        //     )\r\n        // this.http.fetch(`http://eletionapp.3m3pfprvaw.ap-south-1.elasticbeanstalk.com/api/forms`).subscribe((res) => {\r\n        //     console.log(res)\r\n        //     this.forms = res;\r\n        //     console.log(res)\r\n        // })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const remove = {\r\n            color: \"#ef0000\",\r\n        }\r\n        const form = {\r\n            padding: \"10px\",\r\n            marging: \"10px\",\r\n        }\r\n        return (\r\n            <div style={form}>\r\n                Select a Type and Enter Question.\r\n                <label>\r\n                    Question\r\n                </label>\r\n                {\r\n                    this.state.Questions.map((Question, index) => {\r\n                        return (\r\n                            <div key={index} >\r\n                                <input onChange={(e) => this.handleChange(e, index)} value={Question} />\r\n                                {/* <select onChange={(e) => this.handleSelectChange(e, index)} name=\"questionType\">\r\n                                    <option value=\"text\">Text</option>\r\n                                    <option value=\"options\">Options</option>\r\n                                </select> */}\r\n                                {/* { this.state.questionType[index] === \"options\" &&\r\n                                    <div>\r\n                                        {this.options.map((value, i) => {\r\n                                            <input name=\"qtype\" type=\"radio\" value= {value}/><input type=\"text\" value={}></input> <br></br>\r\n                                        })}\r\n                                    </div>\r\n                                } */}\r\n                                <IconButton onClick={() => this.handleRemove(index)} style={remove} >\r\n                                    <CancelIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <hr></hr>\r\n                <Button onClick={(e) => this.addQueston(e)} >\r\n                    Add Question\r\n                </Button>\r\n                <hr>\r\n                </hr>\r\n                <Button onClick={(e) => this.handleSubmit(e)} >\r\n                    Submit\r\n                </Button>\r\n                {/* <Button onClick={(e) => this.handleClear(e)} >Clear</Button> */}\r\n            </div >\r\n        )\r\n    }\r\n\r\n    // change = e => {\r\n    //     // this.props.onChange({ [e.target.name]: e.target.value });\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     });\r\n    //     console.log(e.target.value)\r\n    // };\r\n\r\n    // onSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     // this.props.onSubmit(this.state);\r\n    //     this.setState({\r\n    //         firstName: \"\",\r\n    //         lastName: \"\",\r\n    //         username: \"\",\r\n    //         // email: \"\",\r\n    //         // password: \"\"\r\n    //     });\r\n    //     // this.props.onChange({\r\n    //     //     firstName: \"\",\r\n    //     //     lastName: \"\",\r\n    //     //     username: \"\",\r\n    //     //     email: \"\",\r\n    //     //     password: \"\"\r\n    //     // });\r\n    //     console.log(e.target.value)\r\n    // };\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <form>\r\n    //             <input\r\n    //                 name=\"firstName\"\r\n    //                 placeholder=\"First name\"\r\n    //                 value={this.state.firstName}\r\n    //                 onChange={e => this.change(e)}\r\n    //             />\r\n    //             <br />\r\n    //             <input\r\n    //                 name=\"lastName\"\r\n    //                 placeholder=\"Last name\"\r\n    //                 value={this.state.lastName}\r\n    //                 onChange={e => this.change(e)}\r\n    //             />\r\n    //             <br />\r\n    //             <input\r\n    //                 name=\"username\"\r\n    //                 placeholder=\"Username\"\r\n    //                 value={this.state.username}\r\n    //                 onChange={e => this.change(e)}\r\n    //             />\r\n    //             <br />\r\n    //             <br />\r\n    //             <Button onClick={e => this.onSubmit(e)}>Submit</Button>\r\n    //         </form>\r\n    //     );\r\n    // }\r\n}\r\nForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass GetData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            datas: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://eletionapp.3m3pfprvaw.ap-south-1.elasticbeanstalk.com/api/questions').then(response => {\r\n            // this.state.data = response;\r\n            const data = response.data;\r\n            this.setState({ datas: data.reverse() })\r\n            console.log(response, this.state)\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    render() {\r\n        const { datas } = this.state\r\n        return (\r\n            <div>\r\n                {\r\n                    datas.length ?\r\n                        datas.map((data,index) => <div key={data.id}> {index+1} - {data.question} </div>) :\r\n                        null\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetData;\r\n","import React, { Component } from 'react'\r\n\r\n// function loadData() {\r\n//     let questList = JSON.parse(localStorage.getItem('questionList'))\r\n//     console.log(\"QuestionList\", questList)\r\n// }\r\n\r\nexport default class LoadQuestion extends Component {\r\n    // questList(e) {\r\n    //     // let questList = JSON.parse(localStorage.getItem('questionList'))\r\n    //     // console.log(\"QuestionList\", questList)\r\n    //     console.log(\"QuestionList\", JSON.parse(localStorage.getItem('questionList'))\r\n    // }\r\n    // loadData();\r\n    state = {\r\n        questList: JSON.parse(localStorage.getItem('questionList'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.questList.Questions.map((item, index) => {\r\n                    return <p>{index + 1}) {item} <hr /> </p>\r\n\r\n                })}\r\n                {/* {this.state.questList.Questions} */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n// import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport clsx from 'clsx';\r\nimport Form from './form'\r\nimport LoadQuestion from './loadQuestion'\r\nimport GetData from './requests/GetData'\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: 'block',\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    contentWrapper: {\r\n        margin: '40px 16px',\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    Form: {\r\n        width: '50%',\r\n    },\r\n    icon: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#f5f8fa',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '$root.Mui-focusVisible &': {\r\n            outline: '2px auto rgba(19,124,189,.6)',\r\n            outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#ebf1f5',\r\n        },\r\n        'input:disabled ~ &': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(206,217,224,.5)',\r\n        },\r\n    },\r\n    checkedIcon: {\r\n        backgroundColor: '#137cbd',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n            display: 'block',\r\n            width: 16,\r\n            height: 16,\r\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n            content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#106ba3',\r\n        },\r\n    },\r\n    // list: {\r\n    //     width: 260,\r\n    //     color: theme.palette.common.white,\r\n    // },\r\n    // fullList: {\r\n    //     width: 'auto',\r\n    // },\r\n});\r\n\r\n// class Content extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//     }\r\n//     handleSubmit(e) {\r\n//         alert('The value is: ' + this.input.value);\r\n//         e.preventDefault();\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nfunction Content(props) {\r\n    // let quetionList = {};\r\n    // let questList = localStorage.getItem('questionList');\r\n    let questList = JSON.parse(localStorage.getItem('questionList'))\r\n\r\n    // console.log(\"QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\", localStorage.getItem('questionList'))\r\n    console.log(\"QuestionList\", questList)\r\n\r\n    const handleSubmit = e => {\r\n        alert('The value is: ' + e.target.value);\r\n        // e.preventDefault();\r\n    }\r\n    console.log(props)\r\n\r\n    const { classes } = props;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const refreshData = event => {\r\n        new GetData(1)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const setQuestType = event => {\r\n        const x = window.$pt;\r\n        window.$qt = event.target.value;\r\n        console.log(x, event.target.value);\r\n    }\r\n    const setText = event => {\r\n        window.$pt = event.target.value;\r\n        const x = window.$qt;\r\n        console.log(event.target.value, x);\r\n    }\r\n\r\n\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        {/* <Grid item>\r\n                            <SearchIcon className={classes.block} color=\"inherit\" />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs>\r\n                            <TextField\r\n                                fullWidth\r\n                                placeholder=\"Search by email address, phone number, or user UID\"\r\n                                InputProps={{\r\n                                    disableUnderline: true,\r\n                                    className: classes.searchInput,\r\n                                }}\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            {/* <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                                Add Question\r\n                        </Button> */}\r\n                            {/* <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>Add Qestion</Button> */}\r\n                            <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n                                Add Question\r\n                            </Button>\r\n                            <Popover\r\n                                id={id}\r\n                                open={open}\r\n                                anchorEl={anchorEl}\r\n                                onClose={handleClose}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'center',\r\n                                }}\r\n                            >\r\n\r\n                                {/* <Typography className={classes.typography} >\r\n                                    <span>\r\n                                        <input type=\"text\" onChange={setText.bind(this)}></input>\r\n                                        <input type=\"radio\" value=\"multipleChoice\" name=\"questiontype\" className={classes.root} onChange={setQuestType.bind(this)} />\r\n                                        Multiple Choice\r\n                                        <input type=\"radio\" value=\"plainText\" name=\"questiontype\" onChange={setQuestType.bind(this)} />\r\n                                        PLain text\r\n                                   </span>\r\n                                    <form onSubmit={handleSubmit.bind(this)}>\r\n                                        <label>\r\n                                            Name:\r\n                                     <input type=\"text\" />\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Submit\" />\r\n                                    </form>\r\n\r\n                                </Typography> */}\r\n                                <Form />\r\n                            </Popover>\r\n                            <Tooltip title=\"Reload\">\r\n                                <IconButton>\r\n                                    <RefreshIcon className={classes.block} color=\"inherit\" onClick={refreshData} />\r\n\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.contentWrapper}>\r\n                <Typography color=\"textSecondary\" align=\"center\">\r\n                    Questions\r\n                </Typography>\r\n                {/* <LoadQuestion /> */}\r\n                <GetData />\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: 'block',\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    createformWrapper: {\r\n        margin: '40px 16px',\r\n    },\r\n    // list: {\r\n    //     width: 260,\r\n    //     color: theme.palette.common.white,\r\n    // },\r\n    // fullList: {\r\n    //     width: 'auto',\r\n    // },\r\n});\r\n\r\n\r\nfunction Createform(props) {\r\n    const { classes } = props;\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        {/* <Grid item>\r\n                            <SearchIcon className={classes.block} color=\"inherit\" />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs>\r\n                            <TextField\r\n                                fullWidth\r\n                                placeholder=\"Search by email address, phone number, or user UID\"\r\n                                InputProps={{\r\n                                    disableUnderline: true,\r\n                                    className: classes.searchInput,\r\n                                }}\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            {/* <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                                Add Question\r\n                        </Button> */}\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>Add Form</Button>\r\n                            <Tooltip title=\"Reload\">\r\n                                <IconButton>\r\n                                    <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.createformWrapper}>\r\n                <Typography color=\"textSecondary\" align=\"center\">\r\n                    No Forms added yet!\r\n        </Typography>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nCreateform.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Createform);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Content from './Content';\r\nimport Createform from './Createform';\r\n\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n    secondaryBar: {\r\n        zIndex: 0,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -theme.spacing(1),\r\n    },\r\n    iconButtonAvatar: {\r\n        padding: 4,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: lightColor,\r\n        '&:hover': {\r\n            color: theme.palette.common.white,\r\n        },\r\n    },\r\n    button: {\r\n        // borderColor: lightColor,\r\n    },\r\n    root: {\r\n        borderColor: lightColor,\r\n        flexGrow: 1,\r\n        // backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nfunction Header(props) {\r\n    const { classes, onDrawerToggle } = props;\r\n    const [value, setValue] = React.useState(0);\r\n    function a11yProps(index) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    function TabPanel(props) {\r\n        const { children, value, index, ...other } = props;\r\n\r\n        return (\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && <Box p={3}>{children}</Box>}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.any.isRequired,\r\n        value: PropTypes.any.isRequired,\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                        <Hidden smUp>\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={onDrawerToggle}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xs />\r\n                        <Grid item>\r\n                            {/* <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                                Go to docs\r\n              </Link> */}\r\n                        </Grid>\r\n                        {/* <Grid item>\r\n                            <Tooltip title=\"Alerts • No alerts\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <NotificationsIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"Name Avatar\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                {/* <Toolbar>\r\n                    <Grid container alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs>\r\n                            <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                                Authentication\r\n              </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button className={classes.button} variant=\"outlined\" color=\"inherit\" size=\"small\">\r\n                                Web setup\r\n              </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Help\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <HelpIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar> */}\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                <Tabs value={value} textColor=\"inherit\" className={classes.root} onChange={handleChange}>\r\n                    <Tab textColor=\"inherit\" label=\"Question bank\" {...a11yProps(0)} />\r\n                    <Tab textColor=\"inherit\" label=\"Forms\" {...a11yProps(1)} />\r\n                    <Tab textColor=\"inherit\" label=\"Create forms\" {...a11yProps(2)} />\r\n                    {/* <Tab textColor=\"inherit\" label=\"Usage\" /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <Content />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                No Forms\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Createform />\r\n            </TabPanel>\r\n            {/* <AppBar>\r\n                <div className={classes.root}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Item One\" {...a11yProps(0)} />\r\n                        <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                        <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n\r\n                </div>\r\n            </AppBar> */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator';\r\nimport Content from './Content';\r\nimport Header from './Header';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#63ccff',\r\n            main: '#009be5',\r\n            dark: '#006db3',\r\n        },\r\n    },\r\n    typography: {\r\n        h5: {\r\n            fontWeight: 500,\r\n            fontSize: 26,\r\n            letterSpacing: 0.5,\r\n        },\r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    props: {\r\n        MuiTab: {\r\n            disableRipple: true,\r\n        },\r\n    },\r\n    mixins: {\r\n        toolbar: {\r\n            minHeight: 48,\r\n        },\r\n    },\r\n});\r\n\r\ntheme = {\r\n    ...theme,\r\n    overrides: {\r\n        MuiDrawer: {\r\n            paper: {\r\n                backgroundColor: '#18202c',\r\n            },\r\n        },\r\n        MuiButton: {\r\n            label: {\r\n                textTransform: 'none',\r\n            },\r\n            contained: {\r\n                boxShadow: 'none',\r\n                '&:active': {\r\n                    boxShadow: 'none',\r\n                },\r\n            },\r\n        },\r\n        MuiTabs: {\r\n            root: {\r\n                marginLeft: theme.spacing(1),\r\n            },\r\n            indicator: {\r\n                height: 3,\r\n                borderTopLeftRadius: 3,\r\n                borderTopRightRadius: 3,\r\n                backgroundColor: theme.palette.common.white,\r\n            },\r\n        },\r\n        MuiTab: {\r\n            root: {\r\n                textTransform: 'none',\r\n                margin: '0 16px',\r\n                minWidth: 0,\r\n                padding: 0,\r\n                [theme.breakpoints.up('md')]: {\r\n                    padding: 0,\r\n                    minWidth: 0,\r\n                },\r\n            },\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                padding: theme.spacing(1),\r\n            },\r\n        },\r\n        MuiTooltip: {\r\n            tooltip: {\r\n                borderRadius: 4,\r\n            },\r\n        },\r\n        MuiDivider: {\r\n            root: {\r\n                backgroundColor: '#404854',\r\n            },\r\n        },\r\n        MuiListItemText: {\r\n            primary: {\r\n                fontWeight: theme.typography.fontWeightMedium,\r\n            },\r\n        },\r\n        MuiListItemIcon: {\r\n            root: {\r\n                color: 'inherit',\r\n                marginRight: 0,\r\n                '& svg': {\r\n                    fontSize: 20,\r\n                },\r\n            },\r\n        },\r\n        MuiAvatar: {\r\n            root: {\r\n                width: 32,\r\n                height: 32,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    app: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(6, 4),\r\n        background: '#eaeff1',\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n        background: '#eaeff1',\r\n    },\r\n};\r\n\r\nfunction Question(props) {\r\n    const { classes } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden smUp implementation=\"js\">\r\n                        <Navigator\r\n                            PaperProps={{ style: { width: drawerWidth } }}\r\n                            variant=\"temporary\"\r\n                            open={mobileOpen}\r\n                            onClose={handleDrawerToggle}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden xsDown implementation=\"css\">\r\n                        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n                    </Hidden>\r\n                </nav>\r\n                <div className={classes.app}>\r\n                    <Header onDrawerToggle={handleDrawerToggle} />\r\n                    <main className={classes.main}>\r\n                        {/* <Content /> */}\r\n                    </main>\r\n                    <footer className={classes.footer}>\r\n                        {/* <Copyright /> */}\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nQuestion.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Question);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Question from './Question';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Question />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}